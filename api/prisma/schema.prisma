// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model Pet {
  id        Int       @id @default(autoincrement())
  ownerId   Int
  name      String    @db.VarChar
  speciesId Int
  color     String    @db.VarChar
  missingAt DateTime  @db.Timestamp()
  img       String    @default("placeholer.png") @db.VarChar
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  isDeleted Boolean   @default(false)
  owner     User      @relation(fields: [ownerId], references: [id])
  species   Species   @relation(fields: [speciesId], references: [id])
  rewards   Reward[]
}

model User {
  id             Int          @id @default(autoincrement())
  firstName      String       @db.VarChar
  lastName       String       @db.VarChar
  phoneNumber    String       @unique @db.VarChar
  email          String       @unique @db.VarChar
  emailValidated Boolean      @default(false) @db.Boolean
  password       String       @db.VarChar
  dateOfBirth    DateTime
  img            String       @default("placeholder.png") @db.VarChar
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  isDeleted      Boolean   @default(false)
  pets           Pet[]
  comments       Comment[]
  permissions    Permission[]
}

model Reward {
  id          Int      @id @default(autoincrement())
  amount      Float
  description String
  petId       Int
  locationId  Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  isDeleted Boolean    @default(false)
  pet         Pet      @relation(fields: [petId], references: [id])
  location    Location @relation(fields: [locationId], references: [id])
  comments    Comment[]
}

model Permission {
  id    Int    @id @default(autoincrement())
  name  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  isDeleted Boolean   @default(false)
  users User[]
}

model Species {
  id   Int    @id @default(autoincrement())
  name String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  isDeleted Boolean   @default(false)
  pets Pet[]
}

model Location {
  id      Int      @id @default(autoincrement())
  address String
  city    String
  country String
  latitude  Float
  longitude Float
  description String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  isDeleted Boolean   @default(false)
  Reward  Reward[]
}

model Comment {
  id     Int    @id @default(autoincrement())
  text   String
  userId Int
  rewardId   Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  isDeleted Boolean   @default(false)
  user   User   @relation(fields: [userId], references: [id])
  reward     Reward    @relation(fields: [rewardId], references: [id])
}
